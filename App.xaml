<!--
    File: App.xaml
    Purpose: Defines the custom WPF controls used in the program. 
    Version: 1.4
    Date: 12/20/2019 
    
/* 
Copyright (c) 2019, All rights are reserved by Zexware, Ltd.
    
This program is licensed under the Apache License, Version 2.0 (the "License");
you may not download, install or use this program except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*/
    -->
    
    <Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:XKeyboard"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" mc:Ignorable="d" x:Class="XKeyboard.App" ShutdownMode="OnExplicitShutdown">
    <Application.Resources>
        <SolidColorBrush x:Key="WindowBackground" Color="#FF1E1E1E"/>
        <!--Window, Buttons and Foreground Color of most controls-->
        <SolidColorBrush x:Key="WindowForeground" Color="WhiteSmoke"/>
        <!--The accent or alternative color-->
        <SolidColorBrush x:Key="AccentColor" Color="#FF469EDB"/>
        <SolidColorBrush x:Key="AccentColor2" Color="#FF1069A6"/>
        
        <!--Red/Close button Colors-->
        <SolidColorBrush x:Key="CloseButtonBackground" Color="#FFCA0000"/>
        <SolidColorBrush x:Key="CloseButtonBackgroundHover" Color="Red"/>
        <SolidColorBrush x:Key="CloseButtonBackgroundClick" Color="DarkRed"/>
        <!--Dark button colors-->
        <SolidColorBrush x:Key="darkButtonBack" Color="#FF323232"/>
        <SolidColorBrush x:Key="darkButtonBackClick" Color="#FF1E1E1E"/>
        <SolidColorBrush x:Key="darkButtonBackHover" Color="#FF464646"/>
        <SolidColorBrush x:Key="darkButtonFore"  Color="WhiteSmoke"/>
        <SolidColorBrush x:Key="darkButtonForeClick" Color="WhiteSmoke"/>
        <SolidColorBrush x:Key="darkButtonForeHover" Color="WhiteSmoke"/>
        <SolidColorBrush x:Key="darkButtonBorder" Color="#FF828282"/>
        <SolidColorBrush x:Key="darkButtonBorderClick" Color="#FF282828"/>
        <SolidColorBrush x:Key="darkButtonBorderHover" Color="#FF007ACC"/>

        <!--Dark button style with template-->
        <Style TargetType="Button" >
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="{DynamicResource darkButtonBack}"/>
            <Setter Property="Foreground" Value="{DynamicResource darkButtonFore}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderBrush" Value="{DynamicResource darkButtonBorder}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource darkButtonBorderHover}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource darkButtonBackHover}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource darkButtonBorderHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource darkButtonBackClick}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource darkButtonBorderClick}"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FF838383"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF838383"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF060606"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
      
        
        <!--Custom Item Template For ListView-->
        <ControlTemplate x:Key="ListViewItemTemplate" TargetType="{x:Type ListViewItem}">
            <Border 
                x:Name="Bd" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                Padding="{TemplateBinding Padding}" 
                SnapsToDevicePixels="True">
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource darkButtonBackHover}"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource darkButtonBorderHover}"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                        <Condition Property="IsSelected" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource AccentColor}"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource AccentColor}"/>
                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="WhiteSmoke"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                        <Condition Property="IsSelected" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource AccentColor2}"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource AccentColor}"/>
                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{StaticResource WindowForeground}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <!--<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--Custom List View-->
        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource darkButtonBackClick}"/>
            <Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <!--This style is for the list view's items!!!-->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                        <Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource darkButtonBorder}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="1px"/>
                        <Setter Property="Margin" Value="1px"/>
                        <Setter Property="Template" Value="{DynamicResource ListViewItemTemplate}"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Custom Column Header for list view-->
        <ControlTemplate x:Key="MyColumnHeaderTemplate" TargetType="{x:Type GridViewColumnHeader}">
            <Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </ControlTemplate>
        <Style x:Key="MyColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,1"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Template" Value="{DynamicResource MyColumnHeaderTemplate}"/>
        </Style>

        <Style x:Key="contextMenuStyle" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="{DynamicResource darkButtonBack}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource darkButtonHover}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
            <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Uid="Border_93">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Padding" Value="0,0,5,5"/>
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="1"/>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Border BorderBrush="{DynamicResource darkButtonHover}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource darkButtonBack}" Uid="Border_50">
                                <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Uid="ScrollViewer_9">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ItemsPresenter_5"/>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="contextMenuControlTemplate" TargetType="{x:Type ContextMenu}">
            <Border Uid="Border_93" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="1"/>
                </Border.Effect>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="0,0,0,0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Border BorderBrush="{DynamicResource darkButtonHover}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource darkButtonBack}" Uid="Border_50" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                    <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Uid="ScrollViewer_9" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ItemsPresenter_5" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
                    </ScrollViewer>
                </Border>
            </Border>
        </ControlTemplate>

        <Style x:Key="menuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Foreground" Value="{DynamicResource darkButtonFore}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Bd" BorderBrush="{DynamicResource darkButtonBack}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource darkButtonBack}" SnapsToDevicePixels="True" Uid="Border_38">
                            <Grid x:Name="Grid" Uid="Grid_49">
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentSource="Header" Margin="5" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_33"/>
                                <TextBlock x:Name="InputGestureText" Margin="0" Text="{TemplateBinding InputGestureText}" Uid="TextBlock_10"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource darkButtonHover}"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource darkButtonDown}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource darkButtonDown}"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource darkButtonHover}"/>
                            </Trigger>
                            <DataTrigger Value="False" Binding="{Binding Source, ElementName=MenuItemIcon}">
                                <Setter Property="VerticalAlignment" TargetName="ContentPresenter" Value="Center"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Margin" Value="0,1"/>
                    <Setter Property="Padding" Value="6,3"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Border x:Name="Bd" BorderBrush="{DynamicResource darkButtonHover}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource darkButtonBack}" SnapsToDevicePixels="True" Uid="Border_39">
                                    <DockPanel x:Name="DockPanel" Uid="DockPanel_4">
                                        <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_13" Visibility="Collapsed" VerticalAlignment="Center"/>
                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_35"/>
                                    </DockPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Margin" Value="0,1"/>
                    <Setter Property="Padding" Value="6,3"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Border x:Name="Bd" BorderBrush="{DynamicResource darkButtonHover}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource darkButtonBack}" SnapsToDevicePixels="True" Uid="Border_41">
                                    <DockPanel x:Name="DockPanel" Uid="DockPanel_5">
                                        <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_14" Visibility="Collapsed" VerticalAlignment="Center"/>
                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_37"/>
                                    </DockPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="DockPanel.Dock" Value="Top"/>
                    <Setter Property="Padding" Value="0,2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Border x:Name="Bd" BorderBrush="{DynamicResource darkButtonHover}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource darkButtonBack}" SnapsToDevicePixels="True" Uid="Border_42">
                                    <Grid x:Name="Grid" Uid="Grid_50">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="17" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition MinWidth="5" SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                            <ColumnDefinition Width="14"/>
                                        </Grid.ColumnDefinitions>
                                        <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_15" Visibility="Hidden" VerticalAlignment="Center"/>
                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_39"/>
                                        <Path x:Name="Path" Grid.Column="3" DockPanel.Dock="Right" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" Margin="4,0,6,0" Uid="Path_16" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="DockPanel.Dock" Value="Top"/>
                    <Setter Property="Padding" Value="0,2"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource darkButtonFore}"/>
                    <Setter Property="Background" Value="{DynamicResource darkButtonHover}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource darkButtonDown}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource ListItemDisabledForegroundBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="menuItemStyle2" TargetType="{x:Type MenuItem}">
            <Style.BasedOn>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ListItemForegroundBrush}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
                    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
                    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_38">
                                    <Grid x:Name="Grid" Uid="Grid_49">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="17" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                            <ColumnDefinition Width="14"/>
                                        </Grid.ColumnDefinitions>
                                        <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_12" Visibility="Hidden" VerticalAlignment="Center"/>
                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_33"/>
                                        <TextBlock x:Name="InputGestureText" Grid.Column="2" DockPanel.Dock="Right" Margin="5,2,0,2" Text="{TemplateBinding InputGestureText}" Uid="TextBlock_10"/>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                    </Trigger>
                                    <DataTrigger Value="False">
                                        <DataTrigger.Binding>
                                            <Binding ElementName="MenuItemIcon" Path="Source"/>
                                        </DataTrigger.Binding>
                                        <Setter Property="VerticalAlignment" TargetName="ContentPresenter" Value="Center"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1"/>
                            <Setter Property="Padding" Value="6,3"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_39">
                                            <DockPanel x:Name="DockPanel" Uid="DockPanel_4">
                                                <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_13" Visibility="Collapsed" VerticalAlignment="Center"/>
                                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_35"/>
                                            </DockPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                                <!--<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>-->
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1"/>
                            <Setter Property="Padding" Value="6,3"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_41">
                                            <DockPanel x:Name="DockPanel" Uid="DockPanel_5">
                                                <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_14" Visibility="Collapsed" VerticalAlignment="Center"/>
                                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_37"/>
                                            </DockPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_42">
                                            <Grid x:Name="Grid" Uid="Grid_50">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="17" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="5" SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                                    <ColumnDefinition Width="14"/>
                                                </Grid.ColumnDefinitions>
                                                <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_15" Visibility="Hidden" VerticalAlignment="Center"/>
                                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_39"/>
                                                <Path x:Name="Path" Grid.Column="3" DockPanel.Dock="Right" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" Margin="4,0,6,0" Uid="Path_16" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                                <!--<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>-->
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource darkButtonFore}"/>
                            <Setter Property="Background" Value="{DynamicResource darkButtonHover}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource darkButtonBack}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ListItemDisabledForegroundBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
        </Style>
        
    </Application.Resources>
</Application>
